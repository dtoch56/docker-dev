version: '3.8'

services:
  mysql:
    image: percona:8
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
    cap_add:
      - SYS_NICE  # CAP_SYS_NICE
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_db:/var/db
    configs:
      - source: mysql_config
        target: /etc/my.cnf.d/dev.cnf
    working_dir: /var/db
    networks:
      dev:
        aliases:
          - database.dev.docker
    hostname: mysql
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 10G
        reservations:
          cpus: '0.25'
          memory: 1G

  postgres:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - postgres_db:/var/db
    configs:
      - source: postgres_config
        target: /etc/postgresql/dev.conf
    working_dir: /var/db
    networks:
      dev:
        aliases:
          - postgres.dev.docker
    hostname: postgres
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 10G
        reservations:
          cpus: '0.25'
          memory: 1G

  rabbitmq:
    image: rabbitmq:management-alpine
    ports:
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_VHOST: /
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-password}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      dev:
        aliases:
          - rabbitmq.dev.docker
    hostname: rabbitmq
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.docker.loc`)
        - traefik.http.routers.rabbitmq.tls=true
        - traefik.http.services.rabbitmq.loadbalancer.server.port=15672

  nats:
    image: nats
    ports:
      - "8222:8222"
    networks:
      dev:
        aliases:
          - nats.dev.docker
    hostname: nats
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  etcd:
    image: quay.io/coreos/etcd:v3.4.15
    entrypoint: /usr/local/bin/etcd
    command:
      - '--data-dir=/etcd-data'
      - '--name=node1'
      - '--initial-advertise-peer-urls=http://etcd:2380'
      - '--listen-peer-urls=http://0.0.0.0:2380'
      - '--advertise-client-urls=http://etcd:2379'
      - '--listen-client-urls=http://0.0.0.0:2379'
      - '--initial-cluster=node1=http://etcd:2380'
      - '--initial-cluster-token=rQXm2ZqCWN9s5Qpk5wjrqaF3'
      - '--heartbeat-interval=250'
      - '--election-timeout=1250'
      - '--initial-cluster-state=new'
    environment:
      ETCDCTL_API: 3
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd_data:/etcd-data
    networks:
      dev:
        aliases:
          - etcd.dev.docker
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
#    ports:
#      - "8001:80"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-password}
      PMA_HOST: mysql
    networks:
      - dev
    hostname: phpmyadmin
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.http.routers.phpmyadmin.rule=Host(`pma.docker.loc`)
        - traefik.http.routers.phpmyadmin.tls=true
        - traefik.http.services.phpmyadmin.loadbalancer.server.port=80

  portainer:
    image: portainer/portainer-ce:2.1.1-alpine
#    ports:
#      - "9000:9000"
    networks:
      - dev
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    hostname: portainer
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
      labels:
        - traefik.enable=true
        - traefik.http.routers.portainer.rule=Host(`portainer.docker.loc`)
        - traefik.http.routers.portainer.tls=true
        - traefik.http.services.portainer.loadbalancer.server.port=9000

  traefik:
    image: traefik:v2.4.8
    ports:
      - "80:80"
      - "443:443"
    networks:
      - dev
    volumes:
      - certs:/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    configs:
      - source: traefik_static_config
        target: /etc/traefik/traefik.yml
      - source: traefik_dynamic_config
        target: /etc/traefik/config.yml
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 64M
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik=true"

#  mkcert:
#    image: aegypius/mkcert-for-nginx-proxy
#    volumes:
#      - certs:/app/certs:rw
#      - ~/.mozilla/firefox:/root/.mozilla/firefox:rw
#      - ~/.pki/nssdb:/root/.pki/nssdb:rw
#      - ${CA_STORE:-/usr/local/share/ca-certificates}:/usr/local/share/ca-certificates
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#    networks:
#      - dev
#    deploy:
#      mode: replicated
#      replicas: 1

networks:
  dev:
    name: dev
    driver: overlay
#    driver_opts:
#      com.docker.network.enable_ipv6: "false"
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.20.0.0/16

volumes:
  certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/docker/docker-dev/traefik/certs"
  mysql_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/mysql/data"
  mysql_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/mysql/db"
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/postgres/data"
  postgres_db:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/postgres/db"
  rabbitmq_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/rabbitmq/data"
  etcd_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/etcd/data"
  portainer_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "/storage/docker-dev/portainer/data"

configs:
  mysql_config:
    file: mysql/conf.d/dev.conf
  postgres_config:
    file: postgres/conf.d/dev.conf
  traefik_static_config:
    file: traefik/traefik_swarm.yml
  traefik_dynamic_config:
    file: traefik/config.yml
